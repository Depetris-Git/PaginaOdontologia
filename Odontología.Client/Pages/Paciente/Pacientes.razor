@page "/api/Pacientes"
@inject IHttpServicios http
<PageTitle>Odontología - Pacientes</PageTitle>
<h3>Lista de Pacientes</h3>
<br />
<a class="btn btn-primary" href="/api/Pacientes/agregar">Agregar paciente</a>
<br />
<table>
    <tr>
        <th>DNI</th>
        <th>Nombre Completo</th>
        <th>Email</th>
        <th>Número de Teléfono</th>
        <th>Número de Teléfono secundario</th>
        <th>Dirección</th>
    </tr>
    @if (Mensaje == "")
    {
        @if (listaPacientes == null)
        {
            <p>Buscando...</p>
        }
        else if (listaPacientes.Count == 0)
        {
            <p>No existen pacientes.</p>
        }
        else
        {
            @foreach (var item in listaPacientes)
            {
                <tr>
                    <td>@item.DNI</td>
                    <td>@item.NombreCompleto</td>
                    <td>@item.Email</td>
                    <td>@item.NumeroTelefono</td>
                    <td>@item.NumeroTelefonoSecundario</td>
                    <td>@item.Direccion</td>
                    <td>
                        <a class="btn btn-primary"
                            href="api/Pacientes/editar/@item.Id">
                            Editar</a>
                    </td>
                </tr>
            }
        }
    }
    else
    {
        <p>Error: @Mensaje</p>
    }
</table>

@code {
    List<Paciente> listaPacientes;
    string Mensaje = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var respuesta = await http.Get<List<Paciente>>("api/Pacientes");
        if (!respuesta.Error)
        {
            listaPacientes = respuesta.Respuesta;
        }
        else
        {
            Mensaje = await respuesta.ObtenerError();
        }
    }
}
